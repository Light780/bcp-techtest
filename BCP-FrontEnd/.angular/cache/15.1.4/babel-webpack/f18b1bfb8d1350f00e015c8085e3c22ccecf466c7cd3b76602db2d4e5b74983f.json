{"ast":null,"code":"import { take } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \".\";\nexport class AuthGuard {\n  constructor(usuarioService) {\n    this.usuarioService = usuarioService;\n  }\n  canActivate(route, state) {\n    return this.usuarioService.isAuthenticated.pipe(take(1));\n  }\n}\nAuthGuard.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || AuthGuard)(i0.ɵɵinject(i1.UsuarioService));\n};\nAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuard,\n  factory: AuthGuard.ɵfac\n});","map":{"version":3,"mappings":"AAGA,SAASA,IAAI,QAAQ,gBAAgB;;;AAIrC,OAAM,MAAOC,SAAS;EACpBC,YACmBC,cAA8B;IAA9B,mBAAc,GAAdA,cAAc;EAC9B;EAEHC,WAAW,CACTC,KAA6B,EAC7BC,KAA0B;IAE1B,OAAO,IAAI,CAACH,cAAc,CAACI,eAAe,CAACC,IAAI,CAACR,IAAI,CAAC,CAAC,CAAC,CAAC;EAC1D;;AAVWC,SAAS;mBAATA,SAAS;AAAA;AAATA,SAAS;SAATA,SAAS;EAAAQ,SAATR,SAAS;AAAA","names":["take","AuthGuard","constructor","usuarioService","canActivate","route","state","isAuthenticated","pipe","factory"],"sourceRoot":"","sources":["F:\\Development\\Technical Test\\BCP\\BCP-FrontEnd\\src\\app\\core\\services\\auth-guard.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core'\r\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot } from '@angular/router'\r\nimport { Observable } from 'rxjs'\r\nimport { take } from 'rxjs/operators'\r\nimport { UsuarioService } from '.'\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n  constructor (\r\n    private readonly usuarioService: UsuarioService\r\n  ) {}\r\n\r\n  canActivate (\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): Observable<boolean> {\r\n    return this.usuarioService.isAuthenticated.pipe(take(1))\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}